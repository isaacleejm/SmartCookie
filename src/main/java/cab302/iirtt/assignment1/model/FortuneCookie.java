package cab302.iirtt.assignment1.model;

import cab302.iirtt.assignment1.MainApplication;
import com.sun.tools.javac.Main;

import java.time.LocalDate;
import java.util.List;

public class FortuneCookie extends AIResponse {
    /**
     * Default Constructor of FortuneCookie Class
     */
    public FortuneCookie() {

    }
    /**
     * Declares a FortuneCookie AIResponse
     * @param responseRating The rating of the response
     * @param responseDate The date of which the response was generated
     * @param responseText The response generated by the AI
     * @param userInput The prompt by the User
     * @param favourite If the User favourite it
     * @param userID The User ID of the User who generated the response
     */
    public FortuneCookie(int responseRating, String responseDate, String responseText, String userInput, boolean favourite, int userID) {
        super(AIResponse.ResponseType.valueOf("FORTUNE_COOKIE"), responseRating, responseDate, responseText, userInput, favourite, userID);
    }

    @Override
    public void generateResponse(String userInput) {
        if (MainApplication.currentUser == null) {
            System.out.println("Error, User is not Logged-in to an account");
            return;
        }
        userInput = "Generate a fortune cookie for a " + MainApplication.currentUser.getMood() + "  student. Please make it less than 30 words.";
        AIResponseDAO aiResponseDAO = new AIResponseDAO();
        List<AIResponse> aiResponseList = aiResponseDAO.getAIResponsesByUserID(MainApplication.currentUser.getUserID());
        for (AIResponse response : aiResponseList) {
            if (response instanceof FortuneCookie && response.getResponseDate().equals(LocalDate.now().toString())) {
                return;
            }
        }
        GeminiAPI geminiAPI = new GeminiAPI();
        String generatedResponse = geminiAPI.run(userInput);
        FortuneCookie fortuneCookie = new FortuneCookie(0, LocalDate.now().toString(), generatedResponse, userInput, false, MainApplication.currentUser.getUserID());
        aiResponseDAO.addAIResponse(fortuneCookie);
    }

    @Override
    public List<AIResponse> viewResponses(String userID) { // maybe
        // TODO: Returns a list of all fortune cookie AI responses with the same UserID
        return null;
    }


}
